# Generated by Django 4.2.4 on 2023-08-23 12:43

import VCA.deletion
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AppVersion",
            fields=[
                (
                    "deprecated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deprecate Date"
                    ),
                ),
                (
                    "version_id",
                    models.PositiveSmallIntegerField(
                        primary_key=True, serialize=False, verbose_name="Version Id"
                    ),
                ),
                (
                    "version_name",
                    models.CharField(
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator("\\d+\\.\\d+\\.\\d+")
                        ],
                        verbose_name="Version Name",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                ("added_feature", models.TextField(verbose_name="Added Features")),
                ("details", models.TextField(verbose_name="Details")),
                (
                    "attachment",
                    models.FileField(
                        upload_to="apk",
                        validators=[
                            django.core.validators.FileExtensionValidator(["apk"])
                        ],
                        verbose_name="Application File",
                    ),
                ),
                (
                    "base",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"version_id__lt": models.F("version_id")},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="developed_versions",
                        to="VCA.appversion",
                        verbose_name="Base",
                    ),
                ),
            ],
            options={
                "verbose_name": "Application Version",
                "verbose_name_plural": "Application Versions",
                "ordering": ("version_id",),
            },
        ),
        migrations.CreateModel(
            name="WebAPI",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deprecated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deprecate Date"
                    ),
                ),
                (
                    "view_code_name",
                    models.SlugField(unique=True, verbose_name="View Code"),
                ),
                (
                    "view_name",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="View Name"
                    ),
                ),
                (
                    "view_url",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Za-z0-9/-_\\.]+"
                            ),
                            django.core.validators.RegexValidator(
                                "^/[A-Za-z0-9/-_\\.]+",
                                message="Your path is not started with '/'",
                            ),
                        ],
                        verbose_name="View Url",
                    ),
                ),
                (
                    "absolute_view_url",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Za-z0-9/-_\\.]+"
                            ),
                            django.core.validators.RegexValidator(
                                "^/[A-Za-z0-9/-_\\.]+",
                                message="Your path is not started with '/'",
                            ),
                        ],
                        verbose_name="Absolute View Url",
                    ),
                ),
                ("is_api", models.BooleanField(default=False, verbose_name="Is API")),
                (
                    "new_compatible_view",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="supported_views",
                        to="VCA.webapi",
                        verbose_name="Update",
                    ),
                ),
            ],
            options={
                "verbose_name": "Website View Version",
                "verbose_name_plural": "Website View Versions",
            },
        ),
        migrations.CreateModel(
            name="WebVersion",
            fields=[
                (
                    "deprecated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deprecate Date"
                    ),
                ),
                (
                    "version_id",
                    models.PositiveSmallIntegerField(
                        primary_key=True, serialize=False, verbose_name="Version Id"
                    ),
                ),
                (
                    "version_name",
                    models.CharField(
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator("\\d+\\.\\d+\\.\\d+")
                        ],
                        verbose_name="Version Name",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                ("added_feature", models.TextField(verbose_name="Added Features")),
                ("details", models.TextField(verbose_name="Details")),
                (
                    "weblog_url",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator("^(?:(?!::).)*$"),
                            django.core.validators.RegexValidator(
                                "^/(?:(?!::).)*$",
                                message="Your path is not started with '/'",
                            ),
                        ],
                        verbose_name="Weblog Address",
                    ),
                ),
                (
                    "panel_url",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator("^(?:(?!::).)*$"),
                            django.core.validators.RegexValidator(
                                "^/(?:(?!::).)*$",
                                message="Your path is not started with '/'",
                            ),
                        ],
                        verbose_name="Panel Address",
                    ),
                ),
                (
                    "login_url",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator("^(?:(?!::).)*$"),
                            django.core.validators.RegexValidator(
                                "^/(?:(?!::).)*$",
                                message="Your path is not started with '/'",
                            ),
                        ],
                        verbose_name="Login Address",
                    ),
                ),
                (
                    "register_url",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator("^(?:(?!::).)*$"),
                            django.core.validators.RegexValidator(
                                "^/(?:(?!::).)*$",
                                message="Your path is not started with '/'",
                            ),
                        ],
                        verbose_name="Register Address",
                    ),
                ),
                (
                    "api_prefix",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Za-z0-9/-_\\.]+"
                            ),
                            django.core.validators.RegexValidator(
                                "^/[A-Za-z0-9/-_\\.]+",
                                message="Your path is not started with '/'",
                            ),
                        ],
                        verbose_name="API Prefix",
                    ),
                ),
                (
                    "incompatible_previous_versions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="incompatible_next_versions",
                        to="VCA.webversion",
                        verbose_name="Incompatible Previous version",
                    ),
                ),
                (
                    "previous_versions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="next_versions",
                        to="VCA.webversion",
                        verbose_name="Previous Versions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Website Version",
                "verbose_name_plural": "Website Versions",
                "ordering": ("version_id",),
            },
        ),
        migrations.CreateModel(
            name="WebAPIRequiredByApp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "app_version",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="VCA.appversion"
                    ),
                ),
                (
                    "web_api",
                    models.ForeignKey(
                        on_delete=VCA.deletion.restrict_or_upgrade, to="VCA.webapi"
                    ),
                ),
            ],
            options={
                "verbose_name": "Dependency",
                "verbose_name_plural": "Dependencies",
            },
        ),
        migrations.AddField(
            model_name="webapi",
            name="web_version",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="views",
                to="VCA.webversion",
                verbose_name="Website Version",
            ),
        ),
        migrations.AddField(
            model_name="appversion",
            name="base_dependency_web_version",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="base_depended_by",
                to="VCA.webversion",
            ),
        ),
        migrations.AddField(
            model_name="appversion",
            name="web_apis_required",
            field=models.ManyToManyField(
                related_name="app_versions_using",
                through="VCA.WebAPIRequiredByApp",
                to="VCA.webapi",
            ),
        ),
    ]
